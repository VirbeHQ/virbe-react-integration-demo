/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TouchImport } from './routes/touch'
import { Route as DisplayWebWidgetImport } from './routes/display-web-widget'
import { Route as DisplayKioskStreamingImport } from './routes/display-kiosk-streaming'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TouchRoute = TouchImport.update({
  id: '/touch',
  path: '/touch',
  getParentRoute: () => rootRoute,
} as any)

const DisplayWebWidgetRoute = DisplayWebWidgetImport.update({
  id: '/display-web-widget',
  path: '/display-web-widget',
  getParentRoute: () => rootRoute,
} as any)

const DisplayKioskStreamingRoute = DisplayKioskStreamingImport.update({
  id: '/display-kiosk-streaming',
  path: '/display-kiosk-streaming',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/display-kiosk-streaming': {
      id: '/display-kiosk-streaming'
      path: '/display-kiosk-streaming'
      fullPath: '/display-kiosk-streaming'
      preLoaderRoute: typeof DisplayKioskStreamingImport
      parentRoute: typeof rootRoute
    }
    '/display-web-widget': {
      id: '/display-web-widget'
      path: '/display-web-widget'
      fullPath: '/display-web-widget'
      preLoaderRoute: typeof DisplayWebWidgetImport
      parentRoute: typeof rootRoute
    }
    '/touch': {
      id: '/touch'
      path: '/touch'
      fullPath: '/touch'
      preLoaderRoute: typeof TouchImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/display-kiosk-streaming': typeof DisplayKioskStreamingRoute
  '/display-web-widget': typeof DisplayWebWidgetRoute
  '/touch': typeof TouchRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/display-kiosk-streaming': typeof DisplayKioskStreamingRoute
  '/display-web-widget': typeof DisplayWebWidgetRoute
  '/touch': typeof TouchRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/display-kiosk-streaming': typeof DisplayKioskStreamingRoute
  '/display-web-widget': typeof DisplayWebWidgetRoute
  '/touch': typeof TouchRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/display-kiosk-streaming'
    | '/display-web-widget'
    | '/touch'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/display-kiosk-streaming'
    | '/display-web-widget'
    | '/touch'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/display-kiosk-streaming'
    | '/display-web-widget'
    | '/touch'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DisplayKioskStreamingRoute: typeof DisplayKioskStreamingRoute
  DisplayWebWidgetRoute: typeof DisplayWebWidgetRoute
  TouchRoute: typeof TouchRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DisplayKioskStreamingRoute: DisplayKioskStreamingRoute,
  DisplayWebWidgetRoute: DisplayWebWidgetRoute,
  TouchRoute: TouchRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/display-kiosk-streaming",
        "/display-web-widget",
        "/touch"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/display-kiosk-streaming": {
      "filePath": "display-kiosk-streaming.tsx"
    },
    "/display-web-widget": {
      "filePath": "display-web-widget.tsx"
    },
    "/touch": {
      "filePath": "touch.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
